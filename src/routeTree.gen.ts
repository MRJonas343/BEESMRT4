/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as PublicRouteImport } from './routes/_public/route'
import { Route as PrivateRouteImport } from './routes/_private/route'
import { Route as IndexImport } from './routes/index'
import { Route as PublicRegisterImport } from './routes/_public/register'
import { Route as PublicLoginImport } from './routes/_public/login'
import { Route as PrivateDashboardImport } from './routes/_private/dashboard'
import { Route as PrivateGameMenuImport } from './routes/_private/GameMenu'
import { Route as PrivateGameConfigsGameImport } from './routes/_private/_game/configs/$game'
import { Route as PrivateGameMemoryGameSingleLevelImport } from './routes/_private/_game/memoryGame/single/$level'
import { Route as PrivateGameMemoryGame1vs1LevelImport } from './routes/_private/_game/memoryGame/1vs1/$level'
import { Route as PrivateGameHangmanGameSingleLevelImport } from './routes/_private/_game/hangmanGame/single/$level'
import { Route as PrivateGameHangmanGame1vs1LevelImport } from './routes/_private/_game/hangmanGame/1vs1/$level'

// Create/Update Routes

const PublicRouteRoute = PublicRouteImport.update({
  id: '/_public',
  getParentRoute: () => rootRoute,
} as any)

const PrivateRouteRoute = PrivateRouteImport.update({
  id: '/_private',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const PublicRegisterRoute = PublicRegisterImport.update({
  id: '/register',
  path: '/register',
  getParentRoute: () => PublicRouteRoute,
} as any)

const PublicLoginRoute = PublicLoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => PublicRouteRoute,
} as any)

const PrivateDashboardRoute = PrivateDashboardImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => PrivateRouteRoute,
} as any)

const PrivateGameMenuRoute = PrivateGameMenuImport.update({
  id: '/GameMenu',
  path: '/GameMenu',
  getParentRoute: () => PrivateRouteRoute,
} as any)

const PrivateGameConfigsGameRoute = PrivateGameConfigsGameImport.update({
  id: '/_game/configs/$game',
  path: '/configs/$game',
  getParentRoute: () => PrivateRouteRoute,
} as any)

const PrivateGameMemoryGameSingleLevelRoute =
  PrivateGameMemoryGameSingleLevelImport.update({
    id: '/_game/memoryGame/single/$level',
    path: '/memoryGame/single/$level',
    getParentRoute: () => PrivateRouteRoute,
  } as any)

const PrivateGameMemoryGame1vs1LevelRoute =
  PrivateGameMemoryGame1vs1LevelImport.update({
    id: '/_game/memoryGame/1vs1/$level',
    path: '/memoryGame/1vs1/$level',
    getParentRoute: () => PrivateRouteRoute,
  } as any)

const PrivateGameHangmanGameSingleLevelRoute =
  PrivateGameHangmanGameSingleLevelImport.update({
    id: '/_game/hangmanGame/single/$level',
    path: '/hangmanGame/single/$level',
    getParentRoute: () => PrivateRouteRoute,
  } as any)

const PrivateGameHangmanGame1vs1LevelRoute =
  PrivateGameHangmanGame1vs1LevelImport.update({
    id: '/_game/hangmanGame/1vs1/$level',
    path: '/hangmanGame/1vs1/$level',
    getParentRoute: () => PrivateRouteRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_private': {
      id: '/_private'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof PrivateRouteImport
      parentRoute: typeof rootRoute
    }
    '/_public': {
      id: '/_public'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof PublicRouteImport
      parentRoute: typeof rootRoute
    }
    '/_private/GameMenu': {
      id: '/_private/GameMenu'
      path: '/GameMenu'
      fullPath: '/GameMenu'
      preLoaderRoute: typeof PrivateGameMenuImport
      parentRoute: typeof PrivateRouteImport
    }
    '/_private/dashboard': {
      id: '/_private/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof PrivateDashboardImport
      parentRoute: typeof PrivateRouteImport
    }
    '/_public/login': {
      id: '/_public/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof PublicLoginImport
      parentRoute: typeof PublicRouteImport
    }
    '/_public/register': {
      id: '/_public/register'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof PublicRegisterImport
      parentRoute: typeof PublicRouteImport
    }
    '/_private/_game/configs/$game': {
      id: '/_private/_game/configs/$game'
      path: '/configs/$game'
      fullPath: '/configs/$game'
      preLoaderRoute: typeof PrivateGameConfigsGameImport
      parentRoute: typeof PrivateRouteImport
    }
    '/_private/_game/hangmanGame/1vs1/$level': {
      id: '/_private/_game/hangmanGame/1vs1/$level'
      path: '/hangmanGame/1vs1/$level'
      fullPath: '/hangmanGame/1vs1/$level'
      preLoaderRoute: typeof PrivateGameHangmanGame1vs1LevelImport
      parentRoute: typeof PrivateRouteImport
    }
    '/_private/_game/hangmanGame/single/$level': {
      id: '/_private/_game/hangmanGame/single/$level'
      path: '/hangmanGame/single/$level'
      fullPath: '/hangmanGame/single/$level'
      preLoaderRoute: typeof PrivateGameHangmanGameSingleLevelImport
      parentRoute: typeof PrivateRouteImport
    }
    '/_private/_game/memoryGame/1vs1/$level': {
      id: '/_private/_game/memoryGame/1vs1/$level'
      path: '/memoryGame/1vs1/$level'
      fullPath: '/memoryGame/1vs1/$level'
      preLoaderRoute: typeof PrivateGameMemoryGame1vs1LevelImport
      parentRoute: typeof PrivateRouteImport
    }
    '/_private/_game/memoryGame/single/$level': {
      id: '/_private/_game/memoryGame/single/$level'
      path: '/memoryGame/single/$level'
      fullPath: '/memoryGame/single/$level'
      preLoaderRoute: typeof PrivateGameMemoryGameSingleLevelImport
      parentRoute: typeof PrivateRouteImport
    }
  }
}

// Create and export the route tree

interface PrivateRouteRouteChildren {
  PrivateGameMenuRoute: typeof PrivateGameMenuRoute
  PrivateDashboardRoute: typeof PrivateDashboardRoute
  PrivateGameConfigsGameRoute: typeof PrivateGameConfigsGameRoute
  PrivateGameHangmanGame1vs1LevelRoute: typeof PrivateGameHangmanGame1vs1LevelRoute
  PrivateGameHangmanGameSingleLevelRoute: typeof PrivateGameHangmanGameSingleLevelRoute
  PrivateGameMemoryGame1vs1LevelRoute: typeof PrivateGameMemoryGame1vs1LevelRoute
  PrivateGameMemoryGameSingleLevelRoute: typeof PrivateGameMemoryGameSingleLevelRoute
}

const PrivateRouteRouteChildren: PrivateRouteRouteChildren = {
  PrivateGameMenuRoute: PrivateGameMenuRoute,
  PrivateDashboardRoute: PrivateDashboardRoute,
  PrivateGameConfigsGameRoute: PrivateGameConfigsGameRoute,
  PrivateGameHangmanGame1vs1LevelRoute: PrivateGameHangmanGame1vs1LevelRoute,
  PrivateGameHangmanGameSingleLevelRoute:
    PrivateGameHangmanGameSingleLevelRoute,
  PrivateGameMemoryGame1vs1LevelRoute: PrivateGameMemoryGame1vs1LevelRoute,
  PrivateGameMemoryGameSingleLevelRoute: PrivateGameMemoryGameSingleLevelRoute,
}

const PrivateRouteRouteWithChildren = PrivateRouteRoute._addFileChildren(
  PrivateRouteRouteChildren,
)

interface PublicRouteRouteChildren {
  PublicLoginRoute: typeof PublicLoginRoute
  PublicRegisterRoute: typeof PublicRegisterRoute
}

const PublicRouteRouteChildren: PublicRouteRouteChildren = {
  PublicLoginRoute: PublicLoginRoute,
  PublicRegisterRoute: PublicRegisterRoute,
}

const PublicRouteRouteWithChildren = PublicRouteRoute._addFileChildren(
  PublicRouteRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '': typeof PublicRouteRouteWithChildren
  '/GameMenu': typeof PrivateGameMenuRoute
  '/dashboard': typeof PrivateDashboardRoute
  '/login': typeof PublicLoginRoute
  '/register': typeof PublicRegisterRoute
  '/configs/$game': typeof PrivateGameConfigsGameRoute
  '/hangmanGame/1vs1/$level': typeof PrivateGameHangmanGame1vs1LevelRoute
  '/hangmanGame/single/$level': typeof PrivateGameHangmanGameSingleLevelRoute
  '/memoryGame/1vs1/$level': typeof PrivateGameMemoryGame1vs1LevelRoute
  '/memoryGame/single/$level': typeof PrivateGameMemoryGameSingleLevelRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '': typeof PublicRouteRouteWithChildren
  '/GameMenu': typeof PrivateGameMenuRoute
  '/dashboard': typeof PrivateDashboardRoute
  '/login': typeof PublicLoginRoute
  '/register': typeof PublicRegisterRoute
  '/configs/$game': typeof PrivateGameConfigsGameRoute
  '/hangmanGame/1vs1/$level': typeof PrivateGameHangmanGame1vs1LevelRoute
  '/hangmanGame/single/$level': typeof PrivateGameHangmanGameSingleLevelRoute
  '/memoryGame/1vs1/$level': typeof PrivateGameMemoryGame1vs1LevelRoute
  '/memoryGame/single/$level': typeof PrivateGameMemoryGameSingleLevelRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/_private': typeof PrivateRouteRouteWithChildren
  '/_public': typeof PublicRouteRouteWithChildren
  '/_private/GameMenu': typeof PrivateGameMenuRoute
  '/_private/dashboard': typeof PrivateDashboardRoute
  '/_public/login': typeof PublicLoginRoute
  '/_public/register': typeof PublicRegisterRoute
  '/_private/_game/configs/$game': typeof PrivateGameConfigsGameRoute
  '/_private/_game/hangmanGame/1vs1/$level': typeof PrivateGameHangmanGame1vs1LevelRoute
  '/_private/_game/hangmanGame/single/$level': typeof PrivateGameHangmanGameSingleLevelRoute
  '/_private/_game/memoryGame/1vs1/$level': typeof PrivateGameMemoryGame1vs1LevelRoute
  '/_private/_game/memoryGame/single/$level': typeof PrivateGameMemoryGameSingleLevelRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | ''
    | '/GameMenu'
    | '/dashboard'
    | '/login'
    | '/register'
    | '/configs/$game'
    | '/hangmanGame/1vs1/$level'
    | '/hangmanGame/single/$level'
    | '/memoryGame/1vs1/$level'
    | '/memoryGame/single/$level'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | ''
    | '/GameMenu'
    | '/dashboard'
    | '/login'
    | '/register'
    | '/configs/$game'
    | '/hangmanGame/1vs1/$level'
    | '/hangmanGame/single/$level'
    | '/memoryGame/1vs1/$level'
    | '/memoryGame/single/$level'
  id:
    | '__root__'
    | '/'
    | '/_private'
    | '/_public'
    | '/_private/GameMenu'
    | '/_private/dashboard'
    | '/_public/login'
    | '/_public/register'
    | '/_private/_game/configs/$game'
    | '/_private/_game/hangmanGame/1vs1/$level'
    | '/_private/_game/hangmanGame/single/$level'
    | '/_private/_game/memoryGame/1vs1/$level'
    | '/_private/_game/memoryGame/single/$level'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  PrivateRouteRoute: typeof PrivateRouteRouteWithChildren
  PublicRouteRoute: typeof PublicRouteRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  PrivateRouteRoute: PrivateRouteRouteWithChildren,
  PublicRouteRoute: PublicRouteRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/_private",
        "/_public"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/_private": {
      "filePath": "_private/route.tsx",
      "children": [
        "/_private/GameMenu",
        "/_private/dashboard",
        "/_private/_game/configs/$game",
        "/_private/_game/hangmanGame/1vs1/$level",
        "/_private/_game/hangmanGame/single/$level",
        "/_private/_game/memoryGame/1vs1/$level",
        "/_private/_game/memoryGame/single/$level"
      ]
    },
    "/_public": {
      "filePath": "_public/route.tsx",
      "children": [
        "/_public/login",
        "/_public/register"
      ]
    },
    "/_private/GameMenu": {
      "filePath": "_private/GameMenu.tsx",
      "parent": "/_private"
    },
    "/_private/dashboard": {
      "filePath": "_private/dashboard.tsx",
      "parent": "/_private"
    },
    "/_public/login": {
      "filePath": "_public/login.tsx",
      "parent": "/_public"
    },
    "/_public/register": {
      "filePath": "_public/register.tsx",
      "parent": "/_public"
    },
    "/_private/_game/configs/$game": {
      "filePath": "_private/_game/configs/$game.tsx",
      "parent": "/_private"
    },
    "/_private/_game/hangmanGame/1vs1/$level": {
      "filePath": "_private/_game/hangmanGame/1vs1/$level.tsx",
      "parent": "/_private"
    },
    "/_private/_game/hangmanGame/single/$level": {
      "filePath": "_private/_game/hangmanGame/single/$level.tsx",
      "parent": "/_private"
    },
    "/_private/_game/memoryGame/1vs1/$level": {
      "filePath": "_private/_game/memoryGame/1vs1/$level.tsx",
      "parent": "/_private"
    },
    "/_private/_game/memoryGame/single/$level": {
      "filePath": "_private/_game/memoryGame/single/$level.tsx",
      "parent": "/_private"
    }
  }
}
ROUTE_MANIFEST_END */
